<?php

/**
 * @file
 * Contains a11y.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function a11y_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the a11y module.
    case 'help.page.a11y':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The A11y provides a suite to improve accessibility on your website.') . '</p>';
      $output .= '<h3>' . t('How can i use it?') . '</h3>';
      $output .= '<p>' . t('A11y module provides a set of plugins to improve the accessibility which would be use on A11y blocks. You can create one <a href=":url">here</a>.', [':url' => '/admin/structure/block']) . ' Also, you can implements a custom a11y plugin by extending from class A11yPluginBase in your custom module. You can see an example in the Keyboard plugin.</p>';
      $output .= '<p>' . t('Once your plugin is created, you can implements it creating an A11y entity <a href=":url">here</a>', [':url' => '/admin/config/system/accessibility/a11y']) . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function a11y_preprocess_a11y_template(&$variables) {
  $variables['attributes']['id'] = 'a11y-container';
}

/**
 * Implements hook_theme().
 */
function a11y_theme($existing, $type, $theme, $path) {
  return [
    'a11y_template' => [
      'variables' => [
        'plugins' => NULL,
      ]
    ],
  ];
}
